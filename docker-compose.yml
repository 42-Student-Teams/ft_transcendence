services:
  frontend:
    build:
      context: frontend
    restart: unless-stopped
    env_file:
      - frontend/.env
      - .env
    ports:
      - 8080:8080
    volumes:
      - ./frontend:/app
    networks:
      - backnet
    depends_on:
      - backend
    # command: ["sleep", "infinity"]
  db:
    build:
      context: db
    restart: unless-stopped
    ports:
      - ${DB_PORT}:5432
    volumes:
      - db-data:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - db
      - backnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"] # https://github.com/peter-evans/docker-compose-healthcheck/issues/16#issuecomment-1402807860
      interval: 10s
      timeout: 30s
      start_period: 1s
      retries: 3
  backend:
    build:
      context: django
    restart: unless-stopped
    ports:
      - ${APP_PORT}:8000
    volumes:
      - ./django/app:/app
    env_file:
      - .env
    networks:
      - db
      - backnet
    depends_on:
      db:
        condition: service_healthy
    #command: ["python3", "manage.py", "runserver", "0.0.0.0:8000"]
    #command: ["sleep", "infinity"]
    command: ["./manage.py", "runserver", "0.0.0.0:8069"]
  nginx:
    build:
      context: nginx
      args:
        BACKEND_IP: ${BACKEND_IP}
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./django/app/staticfiles:/var/www/backend/staticfiles/
      - nginx-data:/etc/nginx
      - ./nginx/logs:/var/log/nginx
    env_file:
      - .env
    networks:
      - backnet
    depends_on:
      - backend
      - frontend
    # command: ["sleep", "infinity"]
volumes:
  db-data:
  nginx-data:
  staticfiles:

networks:
  backnet:
  db:

#TODO: followinf w3c setup django, rename django to app, and don't rename app, rather delete it and run sleep infinity and create the app using django admin